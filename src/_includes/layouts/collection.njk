---
layout: layouts/base.njk
title: "{{ title }}"
user:
access_level: public
---

{% set title = galleryEntry.title %}
<main class="site-main">
  <div class="container">
    {% block content %}
      <!-- Collection Header -->
      <section class="collection-detail page-offset">
        <h1>{{ galleryEntry.title }}</h1>
        {% if galleryEntry.subtitle %}
          <p class="subtitle">{{ galleryEntry.subtitle }}</p>
        {% endif %}
        <p class="photo-count" id="photo-count">
          {{ galleryEntry.photo_count or 0 }} photo{% if (galleryEntry.photo_count or 0) != 1 %}s{% endif %}
        </p>
      </section>
      <!-- Public Gallery -->
      <h3>The Gallery</h3>
      <div id="public-gallery" class="collection-gallery">
        {% for image in galleryEntry.images %}
          {% if image.thumb %}
            {% set fullImage = image.thumb | replace('_thumb.jpeg', '.jpeg') %} <img data-photo="{{ image.thumb }}" data-full="{{ fullImage }}" class="collection-photo supabase-image lightbox-enabled" alt="{{ image.alt or galleryEntry.title }}" loading="lazy"/>
          {% endif %}
        {% endfor %}
      </div>
      <p id="public-gallery-empty" style="display: none;">No public images available.</p>
      <!-- Member Gallery Section -->
      <div id="member-gallery-section">
        <h3>The Studio</h3>
        <div class="gallery-access-prompt">
          <p>This gallery is reserved for members.
            <a href="/login">log in</a>
            or
            <a href="/signup">create an account</a>
            to experience it without the blur.</p>
        </div>
        <div id="member-gallery" class="collection-gallery">
          <div class="gallery-loading-message">Loading member images...</div>
        </div>
        <p id="member-gallery-empty" style="display: none;">No member images available.</p>
      </div>
      <!-- Premium Gallery Section -->
      <div id="premium-gallery-section">
        <h3>The Vault</h3>
        <p>
          <strong>Premium access:</strong>
          Upgrade your membership to unlock this gallery.</p>
        <div id="premium-gallery" class="collection-gallery">
          <div class="gallery-loading-message">Loading premium images...</div>
        </div>
        <p id="premium-gallery-empty" style="display: none;">No premium images available.</p>
      </div>
      <!-- Custom Lightbox Container -->
      <div id="lightbox-overlay" class="lightbox-overlay" style="display: none;">
        <button class="lightbox-close">√ó</button>
        <img id="lightbox-image" src="" alt="Full image"/>
        <button class="lightbox-prev">‚Üê</button>
        <button class="lightbox-next">‚Üí</button>
      </div>
      <!-- PhotoSwipe Lightbox -->
      <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="pswp__bg"></div>
        <div class="pswp__scroll-wrap">
          <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
          </div>
          <div class="pswp__ui pswp__ui--hidden"></div>
        </div>
      </div>
      <!-- Lightbox Loader -->
      <div id="lightbox-loader" class="lightbox-loader" style="display: none;">
        <div class="spinner"></div>
      </div>
      <!-- Supabase Config -->
      <script>
        window.SUPABASE_CONFIG = JSON.parse('{{ "" | supabaseConfig | safe }}');
        window.GALLERY_DATA = {
          accessLevel: "{{ user.access_level }}",
          memberImages: {{ galleryEntry.member_images | dump | safe }},
          premiumImages: {{ galleryEntry.premium_images | dump | safe }}
        };
      </script>
      <!-- Supabase Client -->
      <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/umd/supabase.js"></script>
      <script>
        document.addEventListener("DOMContentLoaded", async () => {
          const {url, anonKey} = window.SUPABASE_CONFIG;
          const supabase = window.supabaseClient || window.Supabase.createClient(url, anonKey);
          window.supabaseClient = supabase;
          // Load public images
          const publicImages = document.querySelectorAll('.supabase-image[data-photo]');
          for (const img of publicImages) {
            const thumbPath = img.dataset.photo;
            const fullPath = img.dataset.full;
            if (! thumbPath) 
              continue;
            
            const {data, error} = await supabase
              .storage
              .from('photos')
              .createSignedUrl(thumbPath, 3600);
            if (data ?. signedUrl) {
              img.src = data.signedUrl;
              img.classList.add('loaded');
              if (fullPath) {
                img.classList.add('lightbox-enabled');
                img.setAttribute('data-full-url', fullPath); // optional alias
              }
            } else {
              console.warn("‚ùå Failed to sign public image:", thumbPath, error);
              img.alt = 'Image unavailable';
            }
          }
          // Render gated galleries
          const {accessLevel, memberImages, premiumImages} = window.GALLERY_DATA;
          const renderGallery = async (images, containerId, galleryType, emptyId, sectionId) => {
            const container = document.getElementById(containerId);
            const emptyMessage = document.getElementById(emptyId);
            const section = document.getElementById(sectionId);
            if (! container || ! section) 
              return;
            
            container.innerHTML = ''; // Clear placeholder
            if (!images || images.length === 0) {
              console.log (`üö´ No images found for ${galleryType} gallery`);
              if (emptyMessage) 
                emptyMessage.style.display = 'block';
              
              section.style.display = 'none'; // Hide the entire section
              return;
            }
            for (const image of images) {
              const hasAccess = (accessLevel === 'premium') || (accessLevel === 'member' && galleryType === 'member');
              const thumbPath = hasAccess
                ? image.thumb
                : image.blur;
              const fullPath = hasAccess
                ? image.full
                : null;
              if (! thumbPath) 
                continue;
              
              const {data, error} = await supabase
                .storage
                .from('photos')
                .createSignedUrl(thumbPath, 3600);
              if (!data ?. signedUrl) 
                continue;
              
              const img = document.createElement('img');
              img.className = 'collection-photo supabase-image';
              img.alt = image.alt || 'Untitled';
              img.onload = () => {
                img.classList.add('loaded');
              };
              img.src = data.signedUrl;
              if (fullPath && hasAccess) {
                img.setAttribute('data-full', fullPath);
                img.classList.add('lightbox-enabled');
              } else {
                img.classList.add('lightbox-disabled');
              } container.appendChild(img);
            }
          };
          await renderGallery(memberImages, 'member-gallery', 'member', 'member-gallery-empty', 'member-gallery-section');
          await renderGallery(premiumImages, 'premium-gallery', 'premium', 'premium-gallery-empty', 'premium-gallery-section');
          // Refresh lightbox gallery after dynamic images are added
          if (window.refreshLightboxGallery) {
            window.refreshLightboxGallery();
          }
        });
      </script>
      <!-- Custom Lightbox Assets -->
      <link rel="stylesheet" href="/assets/lightbox.css"/>
      <script src="/assets/lightbox.js" defer></script>
      <script src="/assets/collectionPhotoCounts.js" defer></script>
    {% endblock %}
  </div>
</main>