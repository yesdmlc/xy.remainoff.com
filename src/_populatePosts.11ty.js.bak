const getPostsWithSignedImageUrls = require("../scripts/fetchPosts");

module.exports = {
  data: async () => {
    const supabasePosts = await getPostsWithSignedImageUrls();
    console.log("ðŸ§ª Supabase raw:", JSON.stringify(supabasePosts, null, 2));
    console.log("ðŸ§ª Supabase raw:", supabasePosts.map(p => ({
      slug: p.slug,
      access_level: p.access_level,
      title: p.title
    })));

    const finalPosts = supabasePosts
      .filter(post =>
        post.access_level === "public" &&
        typeof post.slug === "string" &&
        post.slug.length > 0
      )
      .sort((a, b) => new Date(b.date) - new Date(a.date));

    console.log("âœ… FinalPosts:", finalPosts.map(p => p.slug));

    return {
      pagination: {
        data: "finalPosts",
        size: 1,
        alias: "postItem",
        addAllPagesToCollections: true
      },
      permalink: data => `/posts/${data.postItem.slug}/`,
      finalPosts
    };
  },
  render(data) {
  const post = data.postItem;
  return `
    <html>
      <head>
        <meta charset="UTF-8">
        <title>${post.title}</title>
        <link rel="stylesheet" href="/assets/styles.css">
      </head>
      <body>
        <article>
          <h1>${post.title}</h1>
          <img src="${post.signed_cover_image_url}" alt="${post.alt || post.title}">
          <em>${post.caption || ""}</em>
          ${post.content}
        </article>
      </body>
    </html>
  `;
}

};
